# JTSのWebサイトをGitHubと連携して記録する方法（0からの手順）

## 0. 事前準備

- GitHubアカウントを作成（https://github.com/）
- パソコンにGitがインストールされていること（Macなら最初から入っていることが多い）

---

## 1. GitHubで新しいリポジトリを作成

1. GitHubにログイン
2. 右上の「＋」→「New repository」をクリック
3. 「リポジトリ名」を入力（例：JTS-website など）
4. 「Public」か「Private」を選択
5. 「README.md」などは**チェックを外して空のまま**にする（これが一番簡単）
6. 「Create repository」をクリック

---

## 2. ターミナルでJTSフォルダに移動

```sh
cd "/Users/tsugetakamitsu/Desktop/Main Corsor Folder  /Web site/JTS"
```
※パスは自分のJTSフォルダの場所に合わせてください

---

## 3. JTSフォルダをGitで管理できるようにする

```sh
git init
```

---

## 4. ファイルをGitに登録する

```sh
git add .
```
※「.」は「全部のファイル」という意味

---

## 5. 最初の記録（コミット）を作る

```sh
git commit -m "最初のコミット"
```

---

## 6. GitHubとつなげる（リモートリポジトリの設定）

GitHubで作ったリポジトリのURLをコピー  
（例：https://github.com/ユーザー名/リポジトリ名.git）

```sh
git remote add origin https://github.com/ユーザー名/リポジトリ名.git
```
※「ユーザー名」と「リポジトリ名」は自分のものに置き換えてください

---

## 7. ブランチ名をmainにする（必要な場合）

```sh
git branch -M main
```

---

## 8. GitHubにアップロード（プッシュ）する

```sh
git push -u origin main
```

---

## 9. 完了！

- GitHubのページをリロードすると、ファイルがアップロードされているのが分かります。

---

## もしエラーが出たら

- エラーメッセージをそのまま教えてください。
- 必ず一緒に解決します！




## 1. サイトを作りながら記録する方法（バージョン管理）

### ① ファイルを編集・追加・削除する

- 例：`index.html`や`style.css`を編集したり、新しいファイルを作ったりします。

---

### ② 変更をGitで記録する（コミット）

1. ターミナルでJTSフォルダに移動

    ```sh
    cd "/Users/tsugetakamitsu/Desktop/Main Corsor Folder  /Web site/JTS"
    ```

2. 変更をまとめて「準備OK」にする

    ```sh
    git add .
    ```

3. 変更内容を記録する（コミット）

    ```sh
    git commit -m "どんな変更をしたかメッセージを書く"
    ```
    例：  
    ```sh
    git commit -m "トップページのデザインを変更"
    ```

4. GitHubにアップロード（プッシュ）

    ```sh
    git push
    ```

---

## 2. サイトのプレビュー（確認）方法

### 【ローカル（自分のパソコン）で確認】

- `index.html`をダブルクリックしてブラウザで開く
- もしくは、VSCodeの「Live Server」拡張機能を使うと便利

---

### 【GitHubで公開（GitHub Pages）する場合】

1. GitHubのリポジトリページを開く
2. 「Settings」→「Pages」をクリック
3. 「Branch」を`main`にして「/（root）」を選択
4. 「Save」ボタンを押す
5. 数分後、表示されたURLでWebサイトが見られる

---

## 3. 以前の状態に戻す方法（過去のバージョンに戻す）

### ① どんな記録（コミット）があるか確認

```sh
git log
```
- たくさん文字が出てくるけど、「commit xxxxxxx」や「Author」「Date」「メッセージ」が見える

---

### ② 特定の過去の状態に戻す

**一時的に戻して確認したい場合：**

```sh
git checkout コミットID
```
- 「コミットID」は`git log`で出てきた「commit xxxxxxx」のxxxxxx部分

**完全に戻したい場合：**

```sh
git reset --hard コミットID
```
- ※この操作は元に戻せないので注意！

---

## 4. まとめ（よく使うコマンド一覧）

| やりたいこと         | コマンド例                                      |
|----------------------|------------------------------------------------|
| 変更を記録する       | git add .<br>git commit -m "メッセージ"<br>git push |
| 変更履歴を見る       | git log                                        |
| 以前の状態に戻す     | git checkout コミットID<br>または<br>git reset --hard コミットID |
| サイトをローカルで確認| index.htmlをダブルクリック<br>またはLive Server |
| GitHubで公開         | GitHub Pagesを設定                             |

---

## 困ったときは

- エラーや分からないことが出たら、そのまま内容を教えてください。
- 必ず一緒に解決します！

---